name: Python test

on:
  push:
    branches:
      - master
      - dev

jobs:
  build:
    strategy:
      matrix:
        python-version: [3.9]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: cache ta
        id: cache_ta
        uses: actions/cache@v3
        with:
          path: /dl/ta_lib
          key: ${{ runner.os }}-ta
      - name: Download ta_lib
        if: steps.cache_ta.outputs.cache-hit != 'true'
        run: |
          id
          pwd
          mkdir -p /dl/ta_lib
          cd /dl/ta_lib
          wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
      - name: Install ta-lib
        run: |
          cd /dl/ta_lib
          tar -xzf ta-lib-0.4.0-src.tar.gz
          cd ta-lib/ && ./configure --prefix=/usr && make && sudo make install && cd ..
      # - name: Set up Python ${{ matrix.python-version }}
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: ${{ matrix.python-version }}
      #     cache: 'pip' # caching pip dependencies
      # - run: |
      #     python -m pip install --upgrade pip
      #     pip install flake8 pytest build
      #     pip install -r requirements.txt
      # - name: Lint with flake8
      #   run: |
      #     # stop the build if there are Python syntax errors or undefined names
      #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # - name: Test with pytest
      #   run: |
      #     python -m pytest
      #   env:
      #     ELASTIC_URL: ${{ secrets.ELASTIC_URL }}
      #     ELASTIC_USER: ${{ secrets.ELASTIC_USER }}
      #     ELASTIC_PASS: ${{ secrets.ELASTIC_PASS }}
      #     POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}