name: Python test
on:
  push:
    branches:
      - master
      - dev

jobs:
  build:
    strategy:
      matrix:
        python-version: [3.9]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache ta
        id: cache_ta
        uses: actions/cache@v2
        with:
          path: ~/ta_lib
          key: ${{ runner.os }}-ta-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-ta-
      - name: Use cached ta-lib
        if: steps.cache_ta.outputs.cache-hit == 'true'
        run: |
          ls -la ~/ta_lib
      - name: Download ta-lib
        if: steps.cache_ta.outputs.cache-hit != 'true'
        run: |
          mkdir -p $HOME/ta_lib
          cd $HOME/ta_lib
          wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
      - name: Install ta-lib
        if: steps.cache_ta.outputs.cache-hit != 'true'
        run: |
          cd $HOME/ta_lib
          tar -xzf ta-lib-0.4.0-src.tar.gz
          cd ta-lib/ && ./configure --prefix=/usr && make && sudo make install && cd ..
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest build tox
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          python -m pytest
        env:
          ELASTIC_URL: ${{ secrets.ELASTIC_URL }}
          ELASTIC_USER: ${{ secrets.ELASTIC_USER }}
          ELASTIC_PASS: ${{ secrets.ELASTIC_PASS }}
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
